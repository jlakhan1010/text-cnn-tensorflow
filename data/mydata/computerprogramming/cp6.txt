How many hours per day does a Google programmer code?
Its impossible to provide a one-size-fits-all answer to this question - there are way too many variables. To name just a few:
A Technical Lead (TL) will spend more time in meetings than a normal engineer, and a Technical Lead/Manager (TL/M) will spend even more time than that.
Some projects require a lot more coordination across teams than others, and engineers working on those projects will spend less time coding and more time coordinating with other engineers.
More senior engineers are expected to spend more of their time helping other engineers get better - providing code and design reviews, mentoring, recruiting, etc.
Some engineers have pager duty for their systems, which takes away from coding time.
Bottom line is that a mid-level engineer (below L6) who isn't a TL can spend the vast majority of their time doing actual engineering. Most of the engineers who work for me spend less than 4 hours per week in meetings. As a TL/M, I'm in meetings 4 hours per day, which makes it a lot harder for me to get my "real" work done.
When I first joined Google some 6 years ago, I spent almost my entire day coding, aside from the occasional 30 minute meeting.  I didn't realize how good I had it then.  Today, as a TL, my job is to sit in meeting so others don't have to.  There are days when I consider it lucky to get 2 hours of solid coding in.  

But then, my job role is different now.  My job is to come up with the high level design for complex projects, which involves talking to product managers, and tech leads from other groups whom I interface with.  It's more about if something should be done at all, rather then how to do it.  A lot of times, if I do my job right, then some ill conceived feature never makes it into the product, which saves some other engineer, and possibly myself, a lot of trouble and wasted effort down the road.  So I do consider the time I spend in (some) meetings to be well worth it.  But sadly, that's not always the case.

And what time I don't spend in meetings, I have to divide between answering tons of emails, which a lot of times are further debates on some feature that requires cross team, cross functional efforts.  Usually I try to squeeze in at least an hour or two of coding during the day.  Then I go home, spend time with my daughter and wife.  And after they go to bed, I sit down to catch up on code reviews, and if inspiration strikes me, I will get in another hour or two of coding.
Some of us code at home for our own projects. Does that count? I probably code 2-4 hours a day at home for fun (when you average in weekends). There's a mix of programmers where coding is a way of life - just something you do, even in your free time - and others to where they leave their work at work and go home to their families and/or other hobbies. 

As a whole there's ebbs and flows for each project and each team. A lot of it is reflected amongst the TPMs, Managers, and Team Leads. There's a LOT of flexibility in Google to be you. So each 'leader' has their own recipe for how their teams are run. But even so, there will be meetings at Google no matter your manager/team. As unlike what you will see at smaller teams in a single locality you'll have a single project that has programmers from MTV, CHI, DAL, and other areas of the world. So to get on the same page there will be GVCs (Video Conferences) to get everyone on the same page. It also changes the higher you move up. If you're not a team lead or TPM (Technical Project Manager) you will be 'allowed' to code most of the time save for a few GVCs a week with the team major and your group (e.g. server side) per week. 
Google is also a bunch of "hackers", by that I mean they 'hack' something together at lot. Do everything as if you'll use it only this week and forever. Then if it finds traction for many teams, hey let's dogfood this! Hey, this is pretty awesome...even more visibility/use across teams. Hey, write up some documentation for that - let's throw that out to the public. Queue NY to make some videos/tutorials and voila. Let's release to the public and Google I/O it. Voila, You've got mail er gmail! (or whatever) 

Now if you want Agile as possible and the least amount of meetings, where meetings are more "think tanks", try to find smaller startup projects or startup companies. They offer the greatest amount of input and least amount of meetings as you're more engaged than a big overview ("Meeting") for the least common multiple affect (aka getting EVERYONE on the same page) as you only have to get a small group (e.g. 5-6) on the same page vs a team of 20 + business/stakeholders. And this probably why you see all that "buzz" why "top" (cough inexperienced) talent from Stanford, etc are choosing startups. Less meetings, more coding, more 'think tanks' (TedTalk atmosphere) than 'corporate' settings. 

My advice: If you're considering a job at Google (or anywhere else!) try to have as many questions up front for projects and team you'd be working with. I wouldn't recommend taking a job where you don't interview with the direct reporting manager and the TPM. As they'll be the guys who dictate how your day-to-day time is spent.
It depends on the day. I'm usually done being productive with full-on coding tasks after five hours or so. The rest of the time is spent reviewing others' code, interviewing candidates, meetings, EATING, etc. I certainly have had 12-hour coding days when the work is all laid out and a deadline is looming, but it's the exception. Other people are different. My boss is a total machine. He gets in at 8am and codes nonstop until 6pm. Guess that's why he's my boss.